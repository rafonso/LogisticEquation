/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TesteXSpinner.java
 *
 * Created on 27/03/2010, 23:37:54
 */
package logisticequation.ui.components;

import java.util.HashMap;
import java.util.Map;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author rafael
 */
public class TesteJXSpinner extends javax.swing.JFrame {

    /** Creates new form TesteXSpinner */
    public TesteJXSpinner() {
        initComponents();

        this.txfMaximo.setText(this.spinner.getMaximum().toString());
        this.txfMinimo.setText(this.spinner.getMinimum().toString());
        this.txfPadrao.setText(this.spinner.getPattern());
        this.txfPasso.setText(this.spinner.getStep().toString());
        this.txfPassoExtendido.setText(this.spinner.getExtendedStep().toString());
        this.txfValor.setText(this.spinner.getValue().toString());

        this.lblMaximoReal.setText(this.spinner.getMaximum().toString());
        this.lblMinimoReal.setText(this.spinner.getMinimum().toString());
        this.lblPadraoReal.setText(this.spinner.getPattern());
        this.lblPassoReal.setText(this.spinner.getStep().toString());
        this.lblPassoExtREal.setText(this.spinner.getExtendedStep().toString());
        this.lblValorReal.setText(this.spinner.getValue().toString());

        this.map.put(JXSpinner.PROP_EXTENDED_STEP, lblPassoExtREal);
        this.map.put(JXSpinner.PROP_MAXIMUM, lblMaximoReal);
        this.map.put(JXSpinner.PROP_MINIMUM, lblMinimoReal);
        this.map.put(JXSpinner.PROP_PATTERN, lblPadraoReal);
        this.map.put(JXSpinner.PROP_STEP, lblPassoReal);
        this.map.put(JXSpinner.PROP_VALUE, lblValorReal);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlControle = new javax.swing.JPanel();
        lblValor = new javax.swing.JLabel();
        txfValor = new javax.swing.JTextField();
        lblMinimo = new javax.swing.JLabel();
        txfMinimo = new javax.swing.JTextField();
        lblMaximo = new javax.swing.JLabel();
        txfMaximo = new javax.swing.JTextField();
        lblPasso = new javax.swing.JLabel();
        txfPasso = new javax.swing.JTextField();
        lblPassoExtendido = new javax.swing.JLabel();
        txfPassoExtendido = new javax.swing.JTextField();
        lblPadrao = new javax.swing.JLabel();
        txfPadrao = new javax.swing.JTextField();
        pnlValores = new javax.swing.JPanel();
        lblValor1 = new javax.swing.JLabel();
        lblMinimo1 = new javax.swing.JLabel();
        lblMaximo1 = new javax.swing.JLabel();
        lblPasso1 = new javax.swing.JLabel();
        lblPassoExtendido1 = new javax.swing.JLabel();
        lblPadrao1 = new javax.swing.JLabel();
        lblValorReal = new javax.swing.JLabel();
        lblPassoReal = new javax.swing.JLabel();
        lblMinimoReal = new javax.swing.JLabel();
        lblMaximoReal = new javax.swing.JLabel();
        lblPassoExtREal = new javax.swing.JLabel();
        lblPadraoReal = new javax.swing.JLabel();
        pnlSpinner = new javax.swing.JPanel();
        spinner = new logisticequation.ui.components.JXSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Teste de Configuração de XSPinner");

        pnlControle.setBorder(javax.swing.BorderFactory.createTitledBorder("Controles"));
        pnlControle.setLayout(new java.awt.GridBagLayout());

        lblValor.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblValor.setLabelFor(txfValor);
        lblValor.setText("Valor ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblValor, gridBagConstraints);

        txfValor.setColumns(6);
        txfValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfValorActionPerformed(evt);
            }
        });
        txfValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfValorFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfValor, gridBagConstraints);

        lblMinimo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMinimo.setLabelFor(txfMinimo);
        lblMinimo.setText("Mínimo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblMinimo, gridBagConstraints);

        txfMinimo.setColumns(6);
        txfMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfMinimoActionPerformed(evt);
            }
        });
        txfMinimo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfMinimoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfMinimo, gridBagConstraints);

        lblMaximo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaximo.setLabelFor(txfMaximo);
        lblMaximo.setText("Máximo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblMaximo, gridBagConstraints);

        txfMaximo.setColumns(6);
        txfMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfMaximoActionPerformed(evt);
            }
        });
        txfMaximo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfMaximoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfMaximo, gridBagConstraints);

        lblPasso.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPasso.setLabelFor(txfPasso);
        lblPasso.setText("Passo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblPasso, gridBagConstraints);

        txfPasso.setColumns(6);
        txfPasso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPassoActionPerformed(evt);
            }
        });
        txfPasso.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfPassoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfPasso, gridBagConstraints);

        lblPassoExtendido.setLabelFor(txfPassoExtendido);
        lblPassoExtendido.setText("Pass. Ext.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblPassoExtendido, gridBagConstraints);

        txfPassoExtendido.setColumns(6);
        txfPassoExtendido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPassoExtendidoActionPerformed(evt);
            }
        });
        txfPassoExtendido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfPassoExtendidoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfPassoExtendido, gridBagConstraints);

        lblPadrao.setLabelFor(txfPadrao);
        lblPadrao.setText("Padrão");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(lblPadrao, gridBagConstraints);

        txfPadrao.setColumns(6);
        txfPadrao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txfPadraoActionPerformed(evt);
            }
        });
        txfPadrao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txfPadraoFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlControle.add(txfPadrao, gridBagConstraints);

        getContentPane().add(pnlControle, java.awt.BorderLayout.NORTH);

        pnlValores.setBorder(javax.swing.BorderFactory.createTitledBorder("Valores"));
        pnlValores.setLayout(new java.awt.GridBagLayout());

        lblValor1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblValor1.setLabelFor(lblValorReal);
        lblValor1.setText("Valor ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblValor1, gridBagConstraints);

        lblMinimo1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMinimo1.setLabelFor(lblMinimoReal);
        lblMinimo1.setText("Mínimo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblMinimo1, gridBagConstraints);

        lblMaximo1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMaximo1.setLabelFor(lblMaximoReal);
        lblMaximo1.setText("Máximo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblMaximo1, gridBagConstraints);

        lblPasso1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPasso1.setLabelFor(lblPadraoReal);
        lblPasso1.setText("Passo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPasso1, gridBagConstraints);

        lblPassoExtendido1.setLabelFor(lblPassoExtREal);
        lblPassoExtendido1.setText("Pass. Ext.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPassoExtendido1, gridBagConstraints);

        lblPadrao1.setLabelFor(lblPadraoReal);
        lblPadrao1.setText("Padrão");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPadrao1, gridBagConstraints);

        lblValorReal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblValorReal, gridBagConstraints);

        lblPassoReal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPassoReal, gridBagConstraints);

        lblMinimoReal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblMinimoReal, gridBagConstraints);

        lblMaximoReal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblMaximoReal, gridBagConstraints);

        lblPassoExtREal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPassoExtREal, gridBagConstraints);

        lblPadraoReal.setPreferredSize(new java.awt.Dimension(28, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        pnlValores.add(lblPadraoReal, gridBagConstraints);

        getContentPane().add(pnlValores, java.awt.BorderLayout.SOUTH);

        pnlSpinner.setFont(new java.awt.Font("Tahoma", 0, 18));

        spinner.setFont(new java.awt.Font("Tahoma", 0, 24));
        spinner.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                spinnerPropertyChange(evt);
            }
        });
        pnlSpinner.add(spinner);

        getContentPane().add(pnlSpinner, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txfPassoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPassoActionPerformed
        mudarPasso();
    }//GEN-LAST:event_txfPassoActionPerformed

    private void txfMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfMinimoActionPerformed
        this.spinner.setMinimum(this.numberFromField(txfMinimo));
    }//GEN-LAST:event_txfMinimoActionPerformed

    private void txfMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfMaximoActionPerformed
        this.spinner.setMaximum(this.numberFromField(txfMaximo));
    }//GEN-LAST:event_txfMaximoActionPerformed

    private void txfPassoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfPassoFocusLost
        mudarPasso();
    }//GEN-LAST:event_txfPassoFocusLost

    private void txfMinimoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfMinimoFocusLost
        this.spinner.setMinimum(this.numberFromField(txfMinimo));
    }//GEN-LAST:event_txfMinimoFocusLost

    private void txfMaximoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfMaximoFocusLost
        this.spinner.setMaximum(this.numberFromField(txfMaximo));
    }//GEN-LAST:event_txfMaximoFocusLost

    private void txfPassoExtendidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPassoExtendidoActionPerformed
        this.spinner.setExtendedStep(this.numberFromField(txfPassoExtendido));
    }//GEN-LAST:event_txfPassoExtendidoActionPerformed

    private void txfPassoExtendidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfPassoExtendidoFocusLost
        this.spinner.setExtendedStep(this.numberFromField(txfPassoExtendido));
    }//GEN-LAST:event_txfPassoExtendidoFocusLost

    private void txfPadraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfPadraoActionPerformed
        this.spinner.setPattern(txfPadrao.getText());
    }//GEN-LAST:event_txfPadraoActionPerformed

    private void txfPadraoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfPadraoFocusLost
        this.spinner.setPattern(txfPadrao.getText());
    }//GEN-LAST:event_txfPadraoFocusLost

    private void txfValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txfValorActionPerformed
        mudarValor();
    }//GEN-LAST:event_txfValorActionPerformed

    private void txfValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txfValorFocusLost
        mudarValor();
    }//GEN-LAST:event_txfValorFocusLost

    private void spinnerPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_spinnerPropertyChange
        JLabel labelReal = this.map.get(evt.getPropertyName());

        if (labelReal != null) {
            labelReal.setText(evt.getNewValue().toString());
            if (labelReal == this.lblValorReal) {
                this.txfValor.setText(evt.getNewValue().toString());
            } else if (labelReal == this.lblPadraoReal) {
                this.txfValor.setText(this.spinner.getValue().toString());
                this.txfMaximo.setText(this.spinner.getMaximum().toString());
                this.txfMinimo.setText(this.spinner.getMinimum().toString());
                this.txfPassoExtendido.setText(this.spinner.getExtendedStep().toString());
            }
        } else {
            System.out.println(evt.getPropertyName() + ": From " + evt.getOldValue() + " to " + evt.getNewValue());
        }
    }//GEN-LAST:event_spinnerPropertyChange

    private void mudarValor() {
        Number value = this.numberFromField(txfValor);
        if (value != null) {
            this.spinner.setValue(value);
        } else if (this.spinner.getValue() != null) {
            txfValor.setText(this.spinner.getValue().toString());
        }
    }

    private void mudarPasso() {
        Number value = this.numberFromField(txfPasso);
        if (value != null) {
            this.spinner.setStep(value);
        } else if (this.spinner.getStep() != null) {
            txfPasso.setText(this.spinner.getStep().toString());
        }
    }

    private Number numberFromField(JTextField textField) {
        String text = textField.getText();
        if (text.matches(intPattern)) {
            return Integer.valueOf(text);
        }
        if (text.matches(doublePattern)) {
            return Double.valueOf(text);
        }
        return null;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TesteJXSpinner().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblMaximo;
    private javax.swing.JLabel lblMaximo1;
    private javax.swing.JLabel lblMaximoReal;
    private javax.swing.JLabel lblMinimo;
    private javax.swing.JLabel lblMinimo1;
    private javax.swing.JLabel lblMinimoReal;
    private javax.swing.JLabel lblPadrao;
    private javax.swing.JLabel lblPadrao1;
    private javax.swing.JLabel lblPadraoReal;
    private javax.swing.JLabel lblPasso;
    private javax.swing.JLabel lblPasso1;
    private javax.swing.JLabel lblPassoExtREal;
    private javax.swing.JLabel lblPassoExtendido;
    private javax.swing.JLabel lblPassoExtendido1;
    private javax.swing.JLabel lblPassoReal;
    private javax.swing.JLabel lblValor;
    private javax.swing.JLabel lblValor1;
    private javax.swing.JLabel lblValorReal;
    private javax.swing.JPanel pnlControle;
    private javax.swing.JPanel pnlSpinner;
    private javax.swing.JPanel pnlValores;
    private logisticequation.ui.components.JXSpinner spinner;
    private javax.swing.JTextField txfMaximo;
    private javax.swing.JTextField txfMinimo;
    private javax.swing.JTextField txfPadrao;
    private javax.swing.JTextField txfPasso;
    private javax.swing.JTextField txfPassoExtendido;
    private javax.swing.JTextField txfValor;
    // End of variables declaration//GEN-END:variables
    private String intPattern = "^[+-]?\\d+$";
    private String doublePattern = "^[+-]?\\d+(,|\\.)?\\d*$";
    private Map<String, JLabel> map = new HashMap<String, JLabel>();
}
